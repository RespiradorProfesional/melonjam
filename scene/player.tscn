[gd_scene load_steps=5 format=3 uid="uid://c25vw82fm2k5h"]

[ext_resource type="PackedScene" uid="uid://c3n28ydcud7da" path="res://scene/cetrum.tscn" id="1_xo3ru"]

[sub_resource type="GDScript" id="GDScript_4qnqm"]
script/source = "extends CharacterBody3D
class_name Player

@onready var neck = $Neck # Nodo hijo de player que hace de transform de la cámaray y el raycast
@onready var camera = $Neck/Camera3D # Cámara del jugador
@onready var ray_interact = $Neck/Camera3D/RayCast3D # Raycast del centro de la cámara del jugador

const sensitivy_mouse = 0.001 # Sensibilidad del ratón
const SPEED = 5.0 # Velocidad de movimiento
const JUMP_VELOCITY = 4.5 # Velocidad de salto

var mouse_released : bool = false # Comprobación de uso del ratón en partida

var current_interactable : Interactable = null # Interactuable detectado por raycast

#region Máquina de estados del jugador
enum PlayerState { FREE, INTERACTING, DISABLED }
var state: PlayerState = PlayerState.FREE
func set_state(new_state: PlayerState) -> void:
	state = new_state
#endregion

func _unhandled_input(event: InputEvent) -> void:
	vision(event)

func _process(delta):
	match state:
		PlayerState.FREE:
			movement(delta)
		PlayerState.INTERACTING:
			current_interactable.check_object()
		PlayerState.DISABLED:
			pass # Nada, está desactivado
	interaction()

func movement(delta):
	# Gravedad
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Saltar
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Movimiento
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (neck.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()

	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()

func vision(event: InputEvent):
	# ESC: liberar el ratón completamente
	if event.is_action_pressed(\"ui_cancel\"):
		Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
		mouse_released = true
		return

	# Si hace clic en la ventana y el ratón está liberado, recapturarlo según estado
	if event is InputEventMouseButton and event.pressed and mouse_released:
		if state == PlayerState.FREE:
			Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
		elif state == PlayerState.INTERACTING:
			Input.set_mouse_mode(Input.MOUSE_MODE_CONFINED)
			
		mouse_released = false

	# Si el ratón está liberado, no hacer nada más
	if mouse_released:
		return

	# Comportamiento mientras no esté liberado
	match state:
		PlayerState.FREE:
			# Asegurarnos de estar en CAPTURED
			if Input.get_mouse_mode() != Input.MOUSE_MODE_CAPTURED:
				Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

			if event is InputEventMouseMotion:
				neck.rotate_y(-event.relative.x * sensitivy_mouse)
				camera.rotate_x(-event.relative.y * sensitivy_mouse)
				camera.rotation.x = clamp(camera.rotation.x, deg_to_rad(-60), deg_to_rad(60))

		PlayerState.INTERACTING:
			# Asegurarnos de estar en CONFINED
			if Input.get_mouse_mode() != Input.MOUSE_MODE_CONFINED:
				Input.set_mouse_mode(Input.MOUSE_MODE_CONFINED)
			# (Aquí no rotamos la cámara)

		PlayerState.DISABLED:
			pass

func interaction():
	if Input.is_action_just_pressed(\"interact\"):
		#print(\"INTENTANDO OPENING\")
		if current_interactable != null and state == PlayerState.FREE:
			current_interactable.interact(self)

	if Input.is_action_just_pressed(\"detach\"):
		#print(\"INTENTANDO ENDING\")
		if current_interactable != null and state == PlayerState.INTERACTING:
			current_interactable.detach()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_4qnqm"]

[sub_resource type="GDScript" id="GDScript_xo3ru"]
script/source = "extends RayCast3D

@onready var player = get_parent().get_parent().get_parent()
@onready var label_name = $label_name
@onready var label_desc = $label_desc
var PlayerState

func _ready() -> void:
	PlayerState=player.PlayerState

func _process(_delta: float) -> void:
	interactable_detection()
	#Este bloque de código es para que al estar interactuando no se vea el label
	if player.state != PlayerState.FREE and (label_name.visible==true or label_desc.visible==true):
		label_name.visible = false
		label_desc.visible = false

func interactable_detection():
	if is_colliding():
		var hit = get_collider().owner # guardamos el nodo padre de la colisión en variable
		# Comprobamos si detecta un interactuable
		if hit is Interactable:
			if player.current_interactable == null:
				player.current_interactable = hit # Almacenamos el interactuable en el player
				# Mostramos su información durante la colisión
				label_name.visible = true
				label_desc.visible = true
				label_name.text = hit.prompt_name
				label_desc.text = hit.prompt_description
				return
			else:
				return
	# Dejamos de mostrar en caso de perder la colisión
	elif player.state == PlayerState.FREE:
		label_name.visible = false
		label_desc.visible = false
		player.current_interactable = null
"

[node name="Player" type="CharacterBody3D"]
script = SubResource("GDScript_4qnqm")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_4qnqm")

[node name="Neck" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.00170171, -0.00133055)

[node name="Camera3D" type="Camera3D" parent="Neck"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.539086, -0.0011605)

[node name="RayCast3D" type="RayCast3D" parent="Neck/Camera3D"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, -0.760044)
script = SubResource("GDScript_xo3ru")

[node name="label_name" type="Label" parent="Neck/Camera3D/RayCast3D"]
offset_right = 40.0
offset_bottom = 23.0

[node name="label_desc" type="Label" parent="Neck/Camera3D/RayCast3D"]
offset_right = 40.0
offset_bottom = 23.0

[node name="Marker3D" type="Marker3D" parent="Neck"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.400494, -2.09366)

[node name="cetrum" parent="Neck" node_paths=PackedStringArray("shoot_marker", "camera_player") instance=ExtResource("1_xo3ru")]
transform = Transform3D(1, 0, 0, 0, 0.694018, 0.719958, 0, -0.719958, 0.694018, -0.774923, -1.51104, 0.656254)
shoot_marker = NodePath("../Marker3D")
camera_player = NodePath("../Camera3D")
